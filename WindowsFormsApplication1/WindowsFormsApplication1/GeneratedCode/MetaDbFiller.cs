//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.IO;
using System.Collections.Generic;
using System.Linq; 
using System.Text;
using System.Data.SQLite;

public class MetaDbFiller
{
    public static Dictionary<string, object> idfs = new Dictionary<string, object>();
    public static Dictionary<string, object> qf = new Dictionary<string, object>();
    public static Dictionary<string, object> jacquard = new Dictionary<string, object>();

    public static void IdfMetaTable(string columname, Dictionary<string, double> iDfs)
    {
        idfs.Add(columname, iDfs);
    }

    public static void IdfMetaTable(string columname, Dictionary<double, double> iDfs)
    {
        idfs.Add(columname, iDfs);
    }

    public static void AddQfMetaTable(string columname, Dictionary<string, double> qfs)
    {
        qf.Add(columname, qfs);
    }

    public static void AddQfMetaTable(string columname, Dictionary<double, double> qfs)
    {
        qf.Add(columname, qfs);
    }
    
    public static void AddJaquardsMetaTable(string columname, Dictionary<string, object> jaquards)
    {
        jacquard.Add(columname, jaquards);
    }


    //overbodige code want sqlitestudio
    public static void writeCreateStatementsToMetaDB(string[] columnnames) //andere input meegeven
    {
        using (StreamWriter writer = new StreamWriter("metadb.txt"))
        {
            //foreach column in meegegeven argument, voor elke columnnaam maak je een aparte tabel
            //met ID, IDF, QF en QFIDF en schrijf je uit naar een metadb.txt
            string name = columnnames[0];
            string id = columnnames[1];
            string type = columnnames[2];
            string idf = "IDF REAL,";
            string qf = " QF REAL,";
            writer.WriteLine("CREATE TABLE" + " " + name + " " + "( "  + id + " " + type + "," + idf + qf  + ");");
        }
    }

    //overbodige code want sqlitestudio
    public static void writeInsertStatementsToMetaDB(string[] columnnames)
    {
        using (StreamWriter writer = new StreamWriter("metaload.txt")) //Same story voor writeCreateStamentstoMetaDB, maar nu met insert values
        {
            string columnname = columnnames[0];
            writer.WriteLine("INSERT INTO" + " " + columnname + " " + "VALUES (");
        }
    }

    public static DatabaseConnection dbConnection;

    public static void createMetadb(string[] createStatements)
    {
        for (int i = 0; i < createStatements.Length; i++)
        {
            string sql = createStatements[i];
            dbConnection.runCreationSqlMeta(sql);
        }
    }

}

